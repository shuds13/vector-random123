#Compilers

CMP	= mpif90
C_CMP	= mpicc

OPENMP_FLAGS = -fopenmp

ifdef DBG
  DEBUG = -O0 -g -O0 -Wall -Wextra -fbounds-check -fbacktrace
  C_DEBUG = -O0 -g -O0 -Wall -Wextra -fbounds-check
  
else
  OPT	        = -g -O3 -march=native -funroll-loops -fbacktrace

  C_OPT_NOVEC	= -g -O2 -fno-tree-vectorize 
  C_OPT	        = -g -O2 -ftree-vectorize
  
  #try
  #OPT	        = -g -O2 -march=native -funroll-loops
endif

ifdef I3E
  IEEE	= -ffloat-store
endif

FREE_FORM	=  -ffree-form -ffree-line-length-none

FLAGS	= $(OPT) $(DEBUG) $(IEEE) -c $(FREE_FORM) $(OPENMP_FLAGS)

CFLAGS	= $(C_OPT) $(C_DEBUG) $(IEEE) $(CHECK) -c

OBJ_RAND123     = orig_random123.o

OBJ =				\
	precision_mod.o		\
	scalar123.o		\
	scalar123_novec.o	\
	vector123.o		\
        rng_wrapper.o		\
	test.o

%.o: %.F
	$(CMP) $(FLAGS) -o $*.o $<

# %.o: %.f
# 	$(CMP) $(FLAGS) -o $*.o $<

# %.o: %.f90
# 	$(CMP) $(FLAGS) -o $*.o $<

orig_random123.o:	orig_random123.c
	$(C_CMP) $(CFLAGS) -I./Random123 -o orig_random123.o orig_random123.c

scalar123_novec.o:	scalar123_novec.c
	$(C_CMP) $(C_OPT_NOVEC) -c -o scalar123_novec.o scalar123_novec.c

scalar123.o:	scalar123.c
	$(C_CMP) $(C_OPT) -c -o scalar123.o scalar123.c

vector123.o:	vector123.c
	$(C_CMP) $(OPENMP_FLAGS) $(C_OPT) -c -o vector123.o vector123.c

test:	$(OBJ_RAND123) $(OBJ)
	$(CMP) $(OPENMP_FLAGS) $(OBJ_RAND123) $(OBJ) -o test

        
clean:
	rm -f *.o
	rm -f *~
	rm -f *.mod
	rm -f *.lst
	rm -f *.a

tidy:
	rm -f fort.*
	rm -f dots_*
